
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
		// Заполнение шапки
		Должность = ДанныеЗаполнения.Должность;
		Оклад = ДанныеЗаполнения.Оклад;
		ФизЛицо = ДанныеЗаполнения.ФизЛицо;
		Наименование = ДанныеЗаполнения.ФИО;
		Работающий = Истина;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЭтотОбъект.ПользовательИБ = Неопределено Тогда
		// Создание нового пользователя в ИБ
		НовыйПользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		НовыйПользователь.Имя = Строка(ЭтотОбъект.Наименование);
		НовыйПользователь.ПолноеИмя = Строка(ЭтотОбъект.Наименование);
		НовыйПользователь.Роли.Добавить(Метаданные.Роли.Сотрудник);
		НовыйПользователь.Записать();
	
		// Запись уникального идентификатора в поле сотрудника
		ЭтотОбъект.ПользовательИБ = НовыйПользователь.УникальныйИдентификатор;
	Иначе
		Сообщить("Ошибка, этот пользователь уже существует", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ЭтотОбъект.ПользовательИБ);
	
	Если Пользователь <> Неопределено Тогда
		Пользователь.Удалить();
	Иначе
		Сообщить("Предупреждение: не удалось найти соответсвующий профиль сотрудника при его удалении");
	КонецЕсли;
	
КонецПроцедуры
